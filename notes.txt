http://coloradovoters.info/downloads/20190801/

http://coloradovoters.info/downloads/20190801/Registered_Voters_List_%20Part1.zip


20140501/
20140902/
20141201/
20150205/
20151001/
20151102/
20160104/
20160201/
20160601/
20161201/
20170401/
20170801/
20171001/
20181101/
20190101/
20190501/
20190801/
20191201/

set up an api to search db and then:
should use this:
https://npyscreen.readthedocs.io/introduction.html

- determine age
- create seperate collection for searching phone numbers only, return name and voter id

mycol.count_documents({"PHONE_NUM": {"$ne": ''}})
2_013_813

mycol.count_documents({})
3_876_309

---

mycol.find({"FIRST_NAME": "JOHN", "LAST_NAME": "SMITH"}).explain()['executionStats']                                           
Out[1]: 
{'executionSuccess': True,
 'nReturned': 1,
 'executionTimeMillis': 2238,
 'totalKeysExamined': 0,
 'totalDocsExamined': 3876309,
 'executionStages': {'stage': 'COLLSCAN',
  'filter': {'$and': [{'FIRST_NAME': {'$eq': 'JOHN'}},
    {'LAST_NAME': {'$eq': 'SMITH'}}]},
  'nReturned': 1,
  'executionTimeMillisEstimate': 2,
  'works': 3876311,
  'advanced': 1,
  'needTime': 3876309,
  'needYield': 0,
  'saveState': 30283,
  'restoreState': 30283,
  'isEOF': 1,
  'direction': 'forward',
  'docsExamined': 3876309},
 'allPlansExecution': []}

